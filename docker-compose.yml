version: '3.8'

services:
  # Main bot application
  bot:
    build: .
    container_name: hyperliquid-arb-bot
    restart: unless-stopped
    env_file:
      - .env
      - .env.execution
    environment:
      - NODE_ENV=production
      - BOT_MODE=${BOT_MODE:-testnet}
      - DASHBOARD_PORT=4000
    ports:
      - "4000:4000"  # Dashboard
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - bot-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Redis for caching and state management
  redis:
    image: redis:7-alpine
    container_name: hyperliquid-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: hyperliquid-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - bot-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hyperliquid-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    networks:
      - bot-network
    depends_on:
      - prometheus

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: hyperliquid-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - bot-network
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  bot-network:
    driver: bridge
